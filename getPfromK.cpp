#include <iostream>
#include <opencv2/opencv.hpp>
#include <opencv2/calib3d.hpp>

using namespace std;
int main() {


    cv::Mat K_l,K_r,D_l,D_r,P_l,P_r;
//    cv::Mat R = cv::Mat(3,3,CV_8UC1);
//    cv::Mat t = cv::Mat(1,1,CV_8UC3);
    cv::Mat R;
//    cv::Mat t = (cv::Mat_<double>(3,1)<< 1,1,1);

    K_l = (cv::Mat_<double >(3,3) << 355.92665920683993,0.0,317.46529765082636,0.0,355.81964442917615,251.6710590508381,0.0,0.0,1.0);
    K_r = (cv::Mat_<double >(3,3) << 355.6335406603689,0.0,331.8537086096143,0.0,355.4586099627088,251.66659347645336,0.0,0.0,1.0);
    D_l = (cv::Mat_<double >(1,4) << -0.008233106283299627, -0.008124209112643778, 0.006623430331468899, -0.0018757089284170234);
    D_r = (cv::Mat_<double >(1,4) << -0.006755214630030327, -0.014065288760918813, 0.017575264259969213, -0.007932240326283391);

    cv::Mat Tr2l = (cv::Mat_<double>(4,4) << 0.9999920969592708, 0.0015783602576494246, -0.003648944764710461, -0.12000429610256073,
                                           -0.001574765559780088, 0.9999982721839019, 0.0009877968623398519, -9.604505665237143e-05,
                                           0.0036504975593151063, -0.0009820428231960116, 0.9999928547042031, -0.0003128325877119923,
                                           0.0,0.0,0.0,1.0);

//    K_l = (cv::Mat_<double >(3,3) << 458.654, 0.0, 367.215, 0.0, 457.296, 248.375, 0.0, 0.0, 1.0);
//    K_r = (cv::Mat_<double >(3,3) << 457.587, 0.0, 379.999, 0.0, 456.134, 255.238, 0.0, 0.0, 1);
//    D_l = (cv::Mat_<double >(1,4) << -0.28340811, 0.07395907, 0.00019359, 1.76187114e-05, 0.0);
//    D_r = (cv::Mat_<double >(1,4) << -0.28368365, 0.07451284, -0.00010473, -3.555907e-05, 0.0);
//
//    cv::Mat Tr2l = (cv::Mat_<double>(4,4) << 0.9999920969592708, 0.0015783602576494246, -0.003648944764710461, -0.11000429610256073,
//            -0.001574765559780088, 0.9999982721839019, 0.0009877968623398519, -9.604505665237143e-05,
//            0.0036504975593151063, -0.0009820428231960116, 0.9999928547042031, -0.0003128325877119923,
//            0.0,0.0,0.0,1.0);

    cv::Mat Tl2r = Tr2l.inv();

    cv::Mat R1,R2,P1,P2,Q;

    R = Tl2r.rowRange(0,3).colRange(0,3);

    cv::Mat t = (cv::Mat_<double>(3,1)<< Tl2r.at<double >(0,3),Tl2r.at<double >(1,3),Tl2r.at<double >(2,3));
    cout<<"t"<<t<<endl;

    cv::Size size(640,480);

//    cv::Mat aaa = t.reshape(3,1);

    cout<<"a"<<endl;
    cv::fisheye::stereoRectify(K_l,D_l,K_r,D_r,size,R,t,R1,R2,P1,P2,Q,cv::CALIB_ZERO_DISPARITY,size);

    cout<<"R1: "<<endl<<R1<<endl<<endl;
    cout<<"R2: "<<endl<<R2<<endl<<endl;
    cout<<"P1: "<<endl<<P1<<endl<<endl;
    cout<<"P2: "<<endl<<P2<<endl<<endl;
    cout<<"Q: "<<endl<<Q<<endl<<endl;


    std::cout << "Hello, World!" << std::endl;
    return 0;
}